name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE: my-nginx-html-server
  #DOCKER_REGISTRY: https://index.docker.io/v1/
  #DOCKER_REGISTRY_USERNAME: ibtahaj99
  #DOCKER_REGISTRY_PASSWORD: BTEMheR@vP4a3N#

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin ${{ env.DOCKER_REGISTRY }}

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }} .

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin ${{ env.DOCKER_REGISTRY }}

      - name: Deploy Docker container
        run: |
          docker stop my-nginx-html-server || true
          docker rm my-nginx-html-server || true
          docker run -d --name my-nginx-html-server -p 8080:8080 ${{ env.DOCKER_IMAGE }}
          docker ps
          docker logs my-nginx-html-server

  test:
    runs-on: self-hosted
    needs: deploy
    container:
      image: curlimages/curl:latest
    steps:
      - name: Test if the server is up
        run: |
          sleep 60
          curl -v http://localhost:8080 || true
          test $(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080) -eq 200
